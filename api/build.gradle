plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.9'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.search'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'

    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-webtestclient'

    implementation project(":core")


}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register("prepareKotlinBuildScriptModel")


// 변수 선언
def snippetsDir

ext {
    println("ext task is started")
    // Snippet 의 생성 위치를 지정
    snippetsDir = file('build/generated-snippets')
}


test {
    println("test task is started")
    println("snippetDir : " + snippetsDir)
    // Snippets 디렉토리를 출력으로 작업하도록 설정
    outputs.dir snippetsDir
}


// asciidoctor task
asciidoctor{
    println("asciidoctor task is started")
    println("snippetDir : " + snippetsDir)

    inputs.dir snippetsDir
// Configure the use of the asciidoctorExt configuration for extensions.
    configurations 'asciidoctorExt'
// 문서 생성 전 테스트가 실행되도록 test에 종속 설정
    dependsOn test
}

//생성된 문서를 build/resources/main/static 에 복사하는 task
task copyDocument(type: Copy){
    dependsOn asciidoctor
    from file("${asciidoctor.outputDir}")
    into file("build/resources/main/static")
}

bootJar {
    println("Output Diretory : " + "${asciidoctor.outputDir}")
    //빌드 전 문서 생성 확인
    dependsOn copyDocument
}

tasks.named('test') {
    useJUnitPlatform()
}